name: "[PR] CI"

on:
  pull_request:

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

env:
  FLUTTER_SDK_VERSION: 3.27.2

jobs:
  dart-format:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}
          cache: true

      # Validate that our code has a consistent format.
      - run: dart format --output none --set-exit-if-changed .

  static-analysis:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # Install pre-requisites.
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}
          cache: true

      # Run static analysis on all packages.
      - run: flutter analyze --dartdocs

      # Run dart_code_linter additional analysis.
      - run: flutter pub run dart_code_linter:metrics analyze lib --reporter=github

  intl-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Run intl_translation generator
        run: flutter pub run intl_translation:generate_from_arb lib/services/intl/intl.dart i18n/*.arb --output-dir=lib/services/intl/generated


      - name: Check for uncommitted changes in generated files
        id: check_diff
        run: |
          if [[ -n $(git status --porcelain lib/services/intl/generated) ]]; then
            echo "files_changed=true" >> $GITHUB_OUTPUT
          else
            echo "files_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment on PR if generated files changed
        if: steps.check_diff.outputs.files_changed == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            <!-- localization-check -->
            ‚ùå **Generated localization files are outdated.**
            Please run the following command and commit the updated files:

            ```
            flutter pub run intl_translation:generate_from_arb lib/services/intl/intl.dart i18n/*.arb --output-dir=lib/services/intl/generated
            ```

      - name: Find the comment to delete
        if: steps.check_diff.outputs.files_changed == 'false'
        id: find_comment
        uses: peter-evans/find-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: <!-- localization-check -->
      
      - name: Delete the comment
        if: steps.find_comment.outputs.comment-id != ''
        uses: peter-evans/delete-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}

      - name: Fail if generated files are outdated
        if: steps.check_diff.outputs.files_changed == 'true'
        run: exit 1

  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # Install pre-requisites.
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}
          cache: true

      # Delete all existing coverage files.
      - run: find . -name \*lcov.info -type f -delete

      # Run unit tests on all packages that contain tests.
      - run: flutter test --coverage

      # Upload Coverage to coveralls.io.
      - name: Upload Coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          flag-name: biblic_calendar
          base-path: .
          path-to-lcov: coverage/lcov.info
          parallel: true
          debug: true

      # Store the failures images as artifacts.
      # This allows us to easily debug failures in pipelines.
      - uses: actions/upload-artifact@v4
        with:
          name: goldens-failures
          path: "**/failures/*.png"
          if-no-files-found: ignore

  generate-goldens:
    needs: unit-tests
    if: ${{ always() && (needs.unit-tests.result=='failure') }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # Install pre-requisites.
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}
          cache: true

      # Generate golden screenshots.
      - run: flutter test --update-goldens --tags=golden

      # Store the golden images as artifacts.
      # This allows us to update the goldens with the ones
      # generated on the pipeline.
      - uses: actions/upload-artifact@v4
        with:
          name: goldens-biblic_calendar
          path: "**/goldens/*.png"
          if-no-files-found: ignore

